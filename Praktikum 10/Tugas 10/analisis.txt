Menurut analisa saya dari pengerjaan tugas-tugas di atas sebagai berikut.
Tugas 1 yaitu program untuk menentukan tanggal berikutnya dari masukkan keyboard berupa tanggal yang ditentukan user. Program dimulai dengan mendeklarasikan struct yaitu date yang memiliki anggota berupa variabel tanggal (yang merepresentasikan hari), bulan, dan tahun. Pada fungsi main, int statis jmlHari dideklarasikan dan diinisialisasi. Kemudian struct date bernama tanggal dideklarasikan. Lalu, program meminta user memasukkan tanggal. Kemudian, dicek apakah tahun merupakan tahun kabisat dan dicek juga tanggal apakah lebih dari jumlah hari dalam bulan atau tidak. Jika kondisi telah terpenuhi, maka program akan mencetak hari berikutnya. Jika tidak, maka program akan mencetak pesan kesalahan.

Tugas 2 yaitu program memnghitung perbedaan antara dua waktu yang dimasukkan user dan selisihnya dihitung dalam jam, menit, dan detik. Program dimulai dengan mendeklarasikan struct waktu yang memiliki anggota berupa variabel jam, menit, dan detik. Pada fungsi main, struct bernama waktu_1, waktu_2, dan selisih dideklarasikan. Kemudian, program meminta pengguna memasukkan waktu pertama dan kedua. Lalu, program menghitung selisih waktu pertama dan kedua menggunakan tambahan abs() untuk menghindari nilai negatif dan mencetaknya.

Tugas 3 yaitu program untuk menghitung perbedaan antara dua tanggal yang dimasukkan user dan selisihnya dihitung dalam hari. Program dimulai dengan mendeklarasikan struct yaitu date yang memiliki anggota berupa variabel tanggal (yang merepresentasikan hari), bulan, dan tahun. Pada fungsi main, struct date bernama tgl_1, tgl_2, dan selisih dideklarasikan dan int statis jmlHari dideklarasikan dan diinisialisasi. Lalu, variabel valid_tgl dideklarasi dan diinisialisasi ke 0. perulangan do-while digunakanuntuk memastikan user memasukkan tanggalyang valid. Di dalam perulangan tersebut, program meminta user memasukkan tanggal pertama dan kedua. Setelah tanggal yang dimasukkanvalid, program akan menghitung selisih antara kedua tanggal tersebut dalam satuan hari dan dicetak dengan menggunakan abs() untuk menghindarinilai negatif.

Tugas 4 yaitu menjelaskan kegunaan dan cara kerja fungsi sama_str(). Kegunaan dari fungsi sama_str() adalah untuk membandingkan dua buah string yaitu s1 dan s2 yang akan mengembalikan nilai 1 pada variable jawab jika string sama dan 0 jika tidak sama. Cara kerja dari fungsi ini dimulai dengan mendeklarasikan dua variabel integer yaitu i yang diinisialisasi ke 0 yang digunakan sebagai indeks untuk mengulang karakter dalam string, dan jawab yang digunakan untuk menyimpan hasil perbandingan. Selanjutnya, terdapat perulangan while yang terus berlanjut selama karakter di s1 dan s2 sama dan string belum mencapai akhirnya (ditandai dengan karakter nol '\0'). Di dalam perulangan, ++i digunakan untuk berpindah ke posisi berikutnya dalam string. Hal ini dilakukan setelah karakter saat ini dibandingkan. Kemudian, terdapat pernyataan if yang memeriksa apakah akhir dari kedua string telah tercapai. Jika ya, maka stringnya sama, sehingga variabel jawab diset ke 1. Jika tidak, variabel jawab diset ke 0. Terakhir, fungsi mengembalikan nilai jawab.


ANALISIS SOAL TEORI TAMBAHAN
Tugas 5 yaitu program yang menghitung jumlah setiap huruf dari A sampai Z pada kalimat yanng dimasukkan user dan menentukan apakah string tersebut "SEMPURNA". Sebuah kalimat/string dianggap "SEMPURNA" jika string tersebut mengandung setiap huruf alfabet setidaknya satu kali. Program dimulai dengan mendeklarasikan struct counter dengan anggota berupa variabel huruf untuk menyimpan sebuah huruf dan variabel hitung untuk menyimpan jumlah huruf tersebut. Pada fungsi main(), dideklarasikan string kalimat untuk menyimpan masukkan dari pengguna, dan array jumlah dari struct counter dideklarasikan untuk menyimpan jumlah setiap huruf. Pengguna diminta memasukkan sebuah string yang disimpan dalam variabel kalimat. Terdapat loop pertama yang menginisialisasi setiap struct dalam array jumlah. Variabel anggota yaitu huruf diset ke huruf alafabet A hingga Z, dan hitung diset ke 0. Loop kedua menghitung jumlahn setiap huruf dari A hingga Z dalam string kalimat. Hal ini dilakukan dengan mengulang-ulang string dan menambah jumlah setiap huruf. Loop ketiga mencetak setiap huruf dan jumlah setiap huruf. Loop keempat  mengecek apakah string tersebut sempurna jika jumlah pada huruf manapun tidak terdapat hitung yang bernilai 0, sehingga dicetak "KALIMAT SEMPURNA", jika sebaliknya maka dicetak "BUKAN KALIMAT SEMPURNA".